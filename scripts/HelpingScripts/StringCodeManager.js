"use strict";

// класс для преобразования срок с целью ликвидации риска SQL инъекций
export default class StringCodeManager {
    // конструктор
    constructor(stringParam) {
        // инициализируем сроку
        this.s = (stringParam + "").toString();
    }

    // метод для получения кода символа в виде числа
    static getNumberOfChar(c) {
        // возвращаем код символа, переданного в качестве параметра метода
        return c.charCodeAt(0);
    }

    // метод для преобразования строки в форму, пригодную для взаимодействия с SQL
    codeString() {
        // получаем строку
        const s = this.s;
        // создаём массив для хранения кодов символов
        const mass = [];
        // пробегаемся по всем символам строки
        for(let i = 0; i < s.length; i++) {
            // получаем i-ый символ строки
            const c = s.charAt(i);
            // получаем код символа
            const n = StringCodeManager.getNumberOfChar(c);
            // добавляем код символа в конец массива
            mass.push(n);
        }
        // преобразуем массив кодов символов в строку и возвращаем её
        return mass.join("_");
    }

    // метод для преобразования строки из формы, пригодной для взаимодействия с SQL, в человекочитаемый вид
    decodeString() {
        // получаем строку
        const s = (this.s + "").toString();
        // разбиваем строку на элементы и получаем массив кодов символов
        const mass = s.split("_");
        // инициализируем переменную для хранения результирующей строки
        let answer = "";
        // пробегаемся по всему массиву кодов символов
        for(let i = 0; i < mass.length; i++) {
            // получаем i-ый код символа
            const n = mass[i];
            // преобразуем код символа в символ и добавляем полученный символ в конец результирующей строки
            answer += String.fromCharCode(n);
        }
        // возвращаем результирующую строку
        return answer;
    }
}
